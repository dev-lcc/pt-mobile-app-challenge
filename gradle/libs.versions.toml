[versions]
agp = "8.2.2"   #"8.2.0"
android-compileSdk = "34"
android-minSdk = "24"
android-targetSdk = "34"

androidXActivityCompose = "1.8.2"
androidXComposeCompiler = "1.5.10"
androidXComposeBom = "2024.02.02"
androidx-appcompat = "1.6.1"
androidx-constraintlayout = "2.1.4"
androidx-core-ktx = "1.12.0"
androidx-espresso-core = "3.5.1"
androidx-material = "1.11.0"
androidx-test-junit = "1.1.5"

compose = "1.6.3"   #"1.6.2"
compose-plugin = "1.6.1"    #"1.6.0"

### PreCompose Navigation(https://github.com/Tlaster/PreCompose)
navigation-precompose = "1.5.11"

### Robolectric
robolectric = "4.11.1"

junit = "4.13.2"
kotlin = "1.9.23"   #"1.9.22"

koin = "3.5.3"

## Kotlinx
coroutines = "1.8.0"
kotlinxSerialization = "1.6.3"

### Ktor
ktor = "2.3.9"

### SQLDelight
sqlDelight = "2.0.1"

### MobileNativeFoundation/Store
store = "5.0.0-beta02"

### Coil Async Image Library
coil3-kt = "3.0.0-alpha06"

turbine = "1.1.0"

[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "androidx-core-ktx" }
androidx-test-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-junit" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "androidx-espresso-core" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "androidx-appcompat" }

androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidXActivityCompose" }
androidx-compose-compiler = { module = "androidx.compose.compiler:compiler", version.ref = "androidXComposeCompiler" }
androidx-compose-bom = { module = "androidx.compose:compose-bom", version.ref = "androidXComposeBom" }
androidx-compose-foundation = { module = "androidx.compose.foundation:foundation" }
androidx-compose-foundation-layout = { module = "androidx.compose.foundation:foundation-layout" }
androidx-compose-material = { module = "androidx.compose.material:material" }
androidx-compose-material-iconsExtended = { module = "androidx.compose.material:material-icons-extended" }
androidx-compose-material3 = { module = "androidx.compose.material3:material3" }
androidx-compose-material3-windowSizeClass = { module = "androidx.compose.material3:material3-window-size-class" }

androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "androidx-constraintlayout" }

compose-ui-util = { module = "androidx.compose.ui:ui-util", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }

### Robolectric
navigation-precompose = { module = "moe.tlaster:precompose", version.ref = "navigation-precompose" }
navigation-precompose-viewmodel = { module = "moe.tlaster:precompose-viewmodel", version.ref = "navigation-precompose" }
navigation-precompose-koin = { module = "moe.tlaster:precompose-koin", version.ref = "navigation-precompose" }

### Robolectric
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }

### Koin Dependency Injection Framework
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }   # exclude group: 'org.mockito'

### Coroutines
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerialization" }

### Ktor
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-engine-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-engine-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-engine-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }

### SQLDelight
sqlDelight-runtime = { module = "app.cash.sqldelight:runtime", version.ref = "sqlDelight" }
sqlDelight-coroutines-extensions = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqlDelight" }
sqlDelight-driver-sqlite = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqlDelight" }
sqlDelight-driver-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }
sqlDelight-driver-native = { module = "app.cash.sqldelight:native-driver", version.ref = "sqlDelight" }
sqlDelight-dialect-sqlite338 = { module = "app.cash.sqldelight:sqlite-3-38-dialect", version.ref = "sqlDelight" }

### MobileNativeFoundation/Store
store = { module = "org.mobilenativefoundation.store:store5", version.ref = "store" }

### Coil Async Image Library
coil3-kt = { module = "io.coil-kt.coil3:coil", version.ref = "coil3-kt" }
coil3-kt-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil3-kt" }
coil3-kt-network-ktor = { module = "io.coil-kt.coil3:coil-network-ktor", version.ref = "coil3-kt" }

turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
sqlDelight = { id = "app.cash.sqldelight", version.ref = "sqlDelight" }
